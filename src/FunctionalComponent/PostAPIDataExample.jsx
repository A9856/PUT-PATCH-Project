
// Fetch ke sath API me Data bhejna aur Axios k sath  API pr Data bhejna

// import React, { useState } from "react";
// import axios from "axios";
// const PostDataExample = () => {
//   const [Name, setName] = useState("");
//   const [Salary,setSalary]=useState("");
//   const [Designation, setDesignation] = useState("");
//   const [responseData, setResponseData] = useState(null);

//   const handleSubmit = async (e) => {
//     e.preventDefault(); // рдкреЗрдЬ рд░рд┐рдлреНрд░реЗрд╢ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП

//     const newPost = { Name, Designation, Salary,userId: 1 }; // API рдХреЛ рднреЗрдЬрдиреЗ рдХреЗ рд▓рд┐рдП рдбреЗрдЯрд╛

//     try {
//       const response = await fetch("https://jsonplaceholder.typicode.com/posts", {
//         method: "POST", // HTTP POST method
//         headers: {
//           "Content-Type": "application/json",
//         },
//         body: JSON.stringify(newPost), // js string ko JSON format me change krna
//       });

//       const result = await response.json();
//       setResponseData(result); // API se response store

//       // input field blank krna
//       setName("");
//       setDesignation("");
//       setSalary("");
//     } catch (error) {
//       console.error("Data Send In Error:", error);
//     }
//   };
import React, { useState } from "react";
import axios from "axios";
const PostDataExample = () => {
  const [Name, setName] = useState("");
  const [Salary, setSalary] = useState("");
  const [Designation, setDesignation] = useState("");
  const [responseData, setResponseData] = useState(null);
  const handleSubmit = async (e) => {
    e.preventDefault();
    const newPost = { Name, Salary, Designation, userId: 1 };

    try {
      const response = await axios.post("https://jsonplaceholder.typicode.com/posts", newPost);
      setResponseData(response.data);
    } catch (error) {
      console.error("Data Send In Error:", error);
    }
  };
  return (
    <>
      <h2 className="back">API Send Data(POST Request)</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Name"
          value={Name}
          onChange={(e) => setName(e.target.value)}
          required
        /><br /><br />
        <input
          type="text"
          placeholder="Salary"
          value={Salary}
          onChange={(e) => setSalary(e.target.value)}
          required
        /><br /><br />
        <textarea
          placeholder="Designation"
          value={Designation}
          onChange={(e) => setDesignation(e.target.value)}
          required
        ></textarea>
        <br />
        <br />
        <button type="submit" className="bg-success">API Data Post</button>
      </form>

      {responseData && (
        <div>
          <h3>Response:</h3>
          <p><b>ID:</b> {responseData.id}</p>
          <p><b>Name:</b> {responseData.Name}</p>
          <p><b>Salary:{responseData.Salary}</b></p>
          <p><b>Designation:</b> {responseData.Designation}</p>
        </div>
      )}
    </>
  );
};

export default PostDataExample;
//рдЕрдЧрд░ рдЖрдкрдХреЛ API рдкрд░ рдирдпрд╛ рдбреЗрдЯрд╛ рднреЗрдЬрдирд╛ (POST request) рдХрд░рдирд╛ рд╣реИ, рддреЛ рдЖрдк fetch рдпрд╛ axios рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред рдиреАрдЪреЗ рджреЛрдиреЛрдВ рдХреЗ рдЙрджрд╛рд╣рд░рдг рджрд┐рдП рдЧрдП рд╣реИрдВред
// рдХреИрд╕реЗ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ?

// 1. рдпреВрдЬрд╝рд░ title рдФрд░ body рдбрд╛рд▓рддрд╛ рд╣реИред
// 2. рдлреЙрд░реНрдо рд╕рдмрдорд┐рдЯ рдХрд░рдиреЗ рдкрд░ handleSubmit() рдЪрд▓рддрд╛ рд╣реИред
// 3. API рдкрд░ POST Request рднреЗрдЬреА рдЬрд╛рддреА рд╣реИред
// 4. Response рд╕реЗ рдирдпрд╛ рдбреЗрдЯрд╛ рд╕реНрдЯреЗрдЯ рдореЗрдВ рд╕реЗрд╡ рд╣реЛрддрд╛ рд╣реИред
// 5. рдлреЙрд░реНрдо рдЗрдирдкреБрдЯреНрд╕ рд░реАрд╕реЗрдЯ рд╣реЛ рдЬрд╛рддреЗ рд╣реИрдВред

// ЁЯУМ рдореБрдЦреНрдп рдмрд╛рддреЗрдВ
// тЬЕ fetch() рдФрд░ axios() рджреЛрдиреЛрдВ рд╕реЗ API рдХреЛ рдбреЗрдЯрд╛ рднреЗрдЬ рд╕рдХрддреЗ рд╣реИрдВред
// тЬЕ POST Request рдХреЗ рд▓рд┐рдП method: "POST" рджреЗрдирд╛ рдЬрд╝рд░реВрд░реА рд╣реИред
// тЬЕ JSON рдбреЗрдЯрд╛ рднреЗрдЬрдиреЗ рдХреЗ рд▓рд┐рдП JSON.stringify(newPost) рдХрд░рдирд╛ рдЬрд╝рд░реВрд░реА рд╣реИред
// тЬЕ headers: { "Content-Type": "application/json" } API рдХреЛ рдмрддрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ рдХрд┐ рд╣рдо JSON рднреЗрдЬ рд░рд╣реЗ рд╣реИрдВред
// тЬЕ рдпреВрдЬрд╝рд░ рджреНрд╡рд╛рд░рд╛ рдбрд╛рд▓реЗ рдЧрдП рдбреЗрдЯрд╛ рдХреЛ рд╕реНрдЯреЗрдЯ рдореЗрдВ рд╕реЗрд╡ рдФрд░ рд░рд┐рд╕реЗрдЯ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИред